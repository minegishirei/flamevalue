
nginx:
  #image: nginx
  build:
    ./nginx
  ports:
    - "80:80"
    - "443:443"
  volumes:
    - ./nginx/:/etc/nginx/
    - ./nginx/uwsgi_params:/etc/nginx/uwsgi_params
    - ./nginx/conf:/etc/nginx/conf.d
    - ./app/static:/static
  tty:
    true
  links:
    - djangoapp
    - knowledgeapp



djangoapp:
  user: root
  build: .
  dockerfile: "Dockerfile"
  environment:
    ENV: DEV
  expose:
    - "5000"
  volumes:
    - ./app:/app
    - ./God:/God
  command: ./cmd.sh
  container_name: djangoapp
  #command: python3 manage.py runserver 0.0.0.0:5000 
  links:
    - db


db:
  user: root
  image: mariadb
  command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
  environment:
    MYSQL_ROOT_PASSWORD: rootpw
    MYSQL_DATABASE: stock_database
    MYSQL_USER: user
    MYSQL_PASSWORD: passw0rd
  ports:
    - "3306:3306"
  volumes:
    # 初期データを投入するSQLが格納されているdir
    - ./db/mysql-init:/docker-entrypoint-initdb.d
    # 永続化するときにマウントするdir
    - ./db/mysql-data:/var/lib/mysql


knowledgeapp:
  image: koda/docker-knowledge
  environment:
    ENV: DEV
  #build: .
  volumes:
    - ./volumes/knowledge:/root/.knowledge
  expose:
    - "8080"
  container_name: knowledgeapp
  restart: always
  links:
    - "knowdlegedb"



knowdlegedb:
  image: postgres:9
  environment:
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=admin123
    - POSTGRES_DB=knowledge_production
  volumes:
    #- ./volumes/initdb:/docker-entrypoint-initdb.d
    - ./volumes/postgres/data:/var/lib/postgresql/data
  restart: always

